/*     
 *    
 *  Author     : Neal DeBuhr
 *  Version    : DEVS-Suite 3.0.0  
 *  Date       : 12-27-2017
 */
package CoreOne;
import java.awt.*;

import GenCol.*;

import model.modeling.*;
import model.simulation.*;

import view.modeling.ViewableAtomic;
import view.modeling.ViewableComponent;
import view.modeling.ViewableDigraph;
import view.simView.*;

public class JenkinsView extends ViewableDigraph {
    private ViewableAtomic coord;
    private ViewableAtomic job0;
    private ViewableAtomic job1;
    private ViewableAtomic job2;
    private ViewableAtomic job3;
    private ViewableAtomic job4;
    
    public JenkinsView(){
	super("JenkinsView");
	coord = new JenkinsJobCoord();
	job0 = new JenkinsJob("Jenkins Job 000002");
	job1 = new JenkinsJob("Jenkins Job 000005");
	job2 = new JenkinsJob("Jenkins Job 000006");
	job3 = new JenkinsJob("Jenkins Job 000007");
	job4 = new JenkinsJob("Jenkins Job 000009");

	add(coord);
	add(job0);
	add(job1);
	add(job2);
	add(job3);
	add(job4);

	addInports();
	addOutports();
	addCouplings();
	addTestInputs();
    }

    private void addInports(){
	addInport("coord-trigger");
	addInport("coord-github-response");
	addInport("job0-grid-in");
	addInport("job0-github-response");
	addInport("job1-grid-in");
	addInport("job1-github-response");
	addInport("job2-grid-in");
	addInport("job2-github-response");
	addInport("job3-grid-in");
	addInport("job3-github-response");
	addInport("job4-grid-in");
	addInport("job4-github-response");
    }
    
    private void addOutports(){
	addOutport("coord-github-request");
	addOutport("job0-grid-out");
	addOutport("job0-github-request");
	addOutport("job1-grid-out");
	addOutport("job1-github-request");
	addOutport("job2-grid-out");
	addOutport("job2-github-request");
	addOutport("job3-grid-out");
	addOutport("job3-github-request");
	addOutport("job4-grid-out");
	addOutport("job4-github-request");
	addOutport("results");
    }
   
    private void addCouplings(){
	addCoupling(this, "job0-grid-in", job0, "results");
	addCoupling(this, "job0-github-response", job0, "github-response");
	addCoupling(this, "job1-grid-in", job1, "results");
	addCoupling(this, "job1-github-response", job1, "github-response");
	addCoupling(this, "job2-grid-in", job2, "results");
	addCoupling(this, "job2-github-response", job2, "github-response");
	addCoupling(this, "job3-grid-in", job3, "results");
	addCoupling(this, "job3-github-response", job3, "github-response");
	addCoupling(this, "job4-grid-in", job4, "results");
	addCoupling(this, "job4-github-response", job4, "github-response");
	addCoupling(job0, "github-request", this, "job0-github-request");
	addCoupling(job0, "to-grid", this, "job0-grid-out");
	addCoupling(job1, "github-request", this, "job1-github-request");
	addCoupling(job1, "to-grid", this, "job1-grid-out");
	addCoupling(job2, "github-request", this, "job2-github-request");
	addCoupling(job2, "to-grid", this, "job2-grid-out");
	addCoupling(job3, "github-request", this, "job3-github-request");
	addCoupling(job3, "to-grid", this, "job3-grid-out");
	addCoupling(job4, "github-request", this, "job4-github-request");
	addCoupling(job4, "to-grid", this, "job4-grid-out");

	addCoupling(this, "coord-github-response", coord, "github-response");
	addCoupling(coord, "github-request", this, "coord-github-request");

	addCoupling(this, "coord-trigger", coord, "trigger");
	addCoupling(coord, "jenkins-api", job0, "trigger");
	addCoupling(coord, "jenkins-api", job1, "trigger");
	addCoupling(coord, "jenkins-api", job2, "trigger");
	addCoupling(coord, "jenkins-api", job3, "trigger");
	addCoupling(coord, "jenkins-api", job4, "trigger");

	addCoupling(job0, "status", this, "results");
	addCoupling(job1, "status", this, "results");
	addCoupling(job2, "status", this, "results");
	addCoupling(job3, "status", this, "results");
	addCoupling(job4, "status", this, "results");
    }

    private void addTestInputs(){
	addTestInput("coord-trigger", new entity("Github Pull Request"), 0);
	addTestInput("coord-trigger", new entity("Beta System Deployment"), 0);
	addTestInput("coord-trigger", new entity("Scheduled Suite Execution"), 0);
	addTestInput("coord-github-response", new entity("Repo"), 0);
	addTestInput("job0-github-response", new entity("Repo"), 0);
    }
    
    /**
     * Automatically generated by the SimView program.
     * Do not edit this manually, as such changes will get overwritten.
     */
    public void layoutForSimView()
    {
        preferredSize = new Dimension(726, 412);
        ((ViewableComponent)withName("Jenkins Job 000007")).setPreferredLocation(new Point(96, 272));
        ((ViewableComponent)withName("Jenkins Job 000005")).setPreferredLocation(new Point(116, 158));
        ((ViewableComponent)withName("Jenkins Job 000002")).setPreferredLocation(new Point(127, 104));
        ((ViewableComponent)withName("Jenkins Job 000006")).setPreferredLocation(new Point(109, 215));
        ((ViewableComponent)withName("JenkinsJobCoord")).setPreferredLocation(new Point(-14, 37));
        ((ViewableComponent)withName("Jenkins Job 000009")).setPreferredLocation(new Point(77, 330));
    }
}
